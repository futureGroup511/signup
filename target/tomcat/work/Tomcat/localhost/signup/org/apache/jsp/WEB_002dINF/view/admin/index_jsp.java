/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-08-16 09:22:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/head.jsp", out, false);
      out.write("\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticUrl }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("plugins/echarts/echarts.js\"></script>\n");
      out.write("<title>title</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"am-g\">\n");
      out.write("\t<div class=\"am-u-sm-8\">\n");
      out.write("\t\t<div id=\"signup-chart\" style=\"width:100%;height:500px;\"></div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"am-u-sm-4\">\n");
      out.write("\t\t<div id=\"interview-chart\" style=\"width:100%;height:500px;\"></div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("<hr>\n");
      out.write("<div class=\"height20\"></div>\n");
      out.write("<div class=\"am-g\">\n");
      out.write("\t\n");
      out.write("</div>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("        // 基于准备好的dom，初始化echarts实例\n");
      out.write("        var signup_chart = echarts.init(document.getElementById('signup-chart'));\n");
      out.write("        var interview_chart = echarts.init(document.getElementById('interview-chart'));\n");
      out.write("\n");
      out.write("        // 指定图表的配置项和数据\n");
      out.write("        var signup_chart_option = {\n");
      out.write("        \t    title: {\n");
      out.write("        \t        text: '一周报名人数'\n");
      out.write("        \t    },\n");
      out.write("        \t    tooltip: {\n");
      out.write("        \t        trigger: 'axis'\n");
      out.write("        \t    },\n");
      out.write("        \t    legend: {\n");
      out.write("        \t        data:['人数']\n");
      out.write("        \t    },\n");
      out.write("        \t    toolbox: {\n");
      out.write("        \t        show: true,\n");
      out.write("        \t        feature: {\n");
      out.write("        \t            dataZoom: {\n");
      out.write("        \t                yAxisIndex: 'none'\n");
      out.write("        \t            },\n");
      out.write("        \t            dataView: {readOnly: false},\n");
      out.write("        \t            magicType: {type: ['line', 'bar']},\n");
      out.write("        \t            restore: {},\n");
      out.write("        \t            saveAsImage: {}\n");
      out.write("        \t        }\n");
      out.write("        \t    },\n");
      out.write("        \t    xAxis:  {\n");
      out.write("        \t        type: 'category',\n");
      out.write("        \t        boundaryGap: false,\n");
      out.write("        \t        data: ['周一','周二','周三','周四','周五','周六','周日']\n");
      out.write("        \t    },\n");
      out.write("        \t    yAxis: {\n");
      out.write("        \t        type: 'value',\n");
      out.write("        \t        axisLabel: {\n");
      out.write("        \t            formatter: '{value}人'\n");
      out.write("        \t        }\n");
      out.write("        \t    },\n");
      out.write("        \t    series: [\n");
      out.write("        \t        {\n");
      out.write("        \t            name:'人数',\n");
      out.write("        \t            type:'line',\n");
      out.write("        \t            data:[30, 12, 15, 67, 32, 11, 99],\n");
      out.write("        \t            markPoint: {\n");
      out.write("        \t               \n");
      out.write("        \t            },\n");
      out.write("        \t            markLine: {\n");
      out.write("        \t                data: [\n");
      out.write("        \t                    {type: 'average', name: '平均值'}\n");
      out.write("        \t                ]\n");
      out.write("        \t            }\n");
      out.write("        \t        }\n");
      out.write("        \t    ]\n");
      out.write("        \t};\n");
      out.write("\n");
      out.write("        var interview_operation = {\n");
      out.write("        \ttitle: {\n");
      out.write("            \ttext: '面试情况'\n");
      out.write("            },\n");
      out.write("            series : [\n");
      out.write("                {\n");
      out.write("                    name: '面试情况',\n");
      out.write("                    type: 'pie',\n");
      out.write("                    radius: '55%',\n");
      out.write("                    data:[\n");
      out.write("                        {value:235, name:'未面试235'},\n");
      out.write("                        {value:274, name:'正在面试274'},\n");
      out.write("                        {value:310, name:'面试成功310'},\n");
      out.write("                        {value:335, name:'面试失败335'}\n");
      out.write("                    ]\n");
      out.write("                }\n");
      out.write("            ]\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // 使用刚指定的配置项和数据显示图表。\n");
      out.write("        signup_chart.setOption(signup_chart_option);\n");
      out.write("        interview_chart.setOption(interview_operation);\n");
      out.write("        \n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
